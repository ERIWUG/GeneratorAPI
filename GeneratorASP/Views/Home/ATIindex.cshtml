@using GeneratorAPI.Models
@using GeneratorAPI.Models.Entities;
@using Microsoft.EntityFrameworkCore
@model AnswerEntity

@{

}

@{
    Layout = null;
    List<int> KL = new List<int>();
    foreach (var sd in Model.Images)
    {
        KL.Add(sd.Id);
    }
    AppDbContext db = ViewBag.Db;
    var IdGroups = db.IdGroup.AsNoTracking().Include(c => c.IdSets);
}
<!DOCTYPE html>
<head>
    <link rel="stylesheet" href="~/css/QTI.css" />
    <script src="~/js/Index.js" asp-append-version="true"></script>
</head>

<body onload="Func()">
    <form asp-action="AddImageToAnwer" asp-controller="Home" method="post">
        <input type="hidden" name="IdAnswer" value="@Model.Id" />
        <div>
            <p>@ViewBag.IdGroup</p>
            <p>@Model.IdSet.Id</p>
            <p>@Model.Text</p>
        </div>

        <div class="select-nav">
            <select id="select-idGroup" onchange="GetIdSet()">
                @foreach (var c in IdGroups.Select(c => c.Id))
                {
                    <option value="@c">
                        @c
                    </option>
                }
            </select>

            <div>
                @{
                    int i = 0;
                }
                @foreach (var c in IdGroups)
                {
                    String n = i == 0 ? "display:flex" : "display:none"; i++;
                    <select id="select-IdSet-@i" style=@n onchange="GetImage(@i)">
                        @foreach (var q in c.IdSets)
                        {
                            <option value="@q.Id">@q.Id</option>
                        }
                    </select>
                }
                <input type="hidden" id="display-id" value="1"></input>
            </div>



        </div>



        @{
            i = 0;
        }
        <div id="imageGroup">

            @foreach (var c in db.IdGroup.AsNoTracking().Include(c => c.IdSets).ThenInclude(c => c.Images))
            {
                foreach (var q in c.IdSets)
                {

                    String n = i == 0 ? "display:flex" : "display:none"; i++;
                    <div id="imageGroup-@q.Id" class="imageGroup" style=@n>
                        @{
                            i = 0;
                            bool fl;
                        }
                        @foreach (var l in q.Images)
                        {
                            <div class="ImageClass">
                                @if (KL.Contains(l.Id))
                                {
                                    n = "filter:blur(20px)";
                                    fl = true;
                                }
                                else
                                {
                                    n = "";
                                    fl = false;
                                }
                                <img src="@l.Href" id="image-@l.Id" width="400px" height="400px" style="@n" value="@l.Id" />
                                <label>
                                    @l.Href.Split('/').Last();
                                </label>
                                <input type="checkbox" name="ImageValues" id="image-value-@l.Id" value="@l.Id" checked="@fl" style="display:none" />

                            </div>
                            i++;
                        }
                    </div>
                }
            }
        </div>
        <input type="hidden" id="Image-id-shown" value="1"></input>



        <input type="submit"></input>


    </form>
</body>




